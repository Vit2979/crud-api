(()=>{var e={371:(e,t,n)=>{n(738).config(Object.assign({},n(547),n(962)(process.argv)))},962:e=>{const t=/^dotenv_config_(encoding|path|debug|override|DOTENV_KEY)=(.+)$/;e.exports=function(e){return e.reduce((function(e,n){const r=n.match(t);return r&&(e[r[1]]=r[2]),e}),{})}},547:e=>{const t={};null!=process.env.DOTENV_CONFIG_ENCODING&&(t.encoding=process.env.DOTENV_CONFIG_ENCODING),null!=process.env.DOTENV_CONFIG_PATH&&(t.path=process.env.DOTENV_CONFIG_PATH),null!=process.env.DOTENV_CONFIG_DEBUG&&(t.debug=process.env.DOTENV_CONFIG_DEBUG),null!=process.env.DOTENV_CONFIG_OVERRIDE&&(t.override=process.env.DOTENV_CONFIG_OVERRIDE),null!=process.env.DOTENV_CONFIG_DOTENV_KEY&&(t.DOTENV_KEY=process.env.DOTENV_CONFIG_DOTENV_KEY),e.exports=t},738:(e,t,n)=>{const r=n(147),s=n(17),o=n(37),i=n(113),a=n(968).version,c=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;function l(e){console.log(`[dotenv@${a}][DEBUG] ${e}`)}function u(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function d(e,t){let n;try{n=new URL(t)}catch(e){if("ERR_INVALID_URL"===e.code)throw new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=development");throw e}const r=n.password;if(!r)throw new Error("INVALID_DOTENV_KEY: Missing key part");const s=n.searchParams.get("environment");if(!s)throw new Error("INVALID_DOTENV_KEY: Missing environment part");const o=`DOTENV_VAULT_${s.toUpperCase()}`,i=e.parsed[o];if(!i)throw new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${o} in your .env.vault file.`);return{ciphertext:i,key:r}}function p(e){let t=s.resolve(process.cwd(),".env");return e&&e.path&&e.path.length>0&&(t=e.path),t.endsWith(".vault")?t:`${t}.vault`}const f={configDotenv:function(e){let t=s.resolve(process.cwd(),".env"),n="utf8";const i=Boolean(e&&e.debug);var a;e&&(null!=e.path&&(t="~"===(a=e.path)[0]?s.join(o.homedir(),a.slice(1)):a),null!=e.encoding&&(n=e.encoding));try{const s=f.parse(r.readFileSync(t,{encoding:n}));let o=process.env;return e&&null!=e.processEnv&&(o=e.processEnv),f.populate(o,s,e),{parsed:s}}catch(e){return i&&l(`Failed to load ${t} ${e.message}`),{error:e}}},_configVault:function(e){console.log(`[dotenv@${a}][INFO] Loading env from encrypted .env.vault`);const t=f._parseVault(e);let n=process.env;return e&&null!=e.processEnv&&(n=e.processEnv),f.populate(n,t,e),{parsed:t}},_parseVault:function(e){const t=p(e),n=f.configDotenv({path:t});if(!n.parsed)throw new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);const r=u(e).split(","),s=r.length;let o;for(let e=0;e<s;e++)try{const t=d(n,r[e].trim());o=f.decrypt(t.ciphertext,t.key);break}catch(t){if(e+1>=s)throw t}return f.parse(o)},config:function(e){const t=p(e);return 0===u(e).length?f.configDotenv(e):r.existsSync(t)?f._configVault(e):(n=`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`,console.log(`[dotenv@${a}][WARN] ${n}`),f.configDotenv(e));var n},decrypt:function(e,t){const n=Buffer.from(t.slice(-64),"hex");let r=Buffer.from(e,"base64");const s=r.slice(0,12),o=r.slice(-16);r=r.slice(12,-16);try{const e=i.createDecipheriv("aes-256-gcm",n,s);return e.setAuthTag(o),`${e.update(r)}${e.final()}`}catch(e){const t=e instanceof RangeError,n="Invalid key length"===e.message,r="Unsupported state or unable to authenticate data"===e.message;if(t||n)throw new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");if(r)throw new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw console.error("Error: ",e.code),console.error("Error: ",e.message),e}},parse:function(e){const t={};let n,r=e.toString();for(r=r.replace(/\r\n?/gm,"\n");null!=(n=c.exec(r));){const e=n[1];let r=n[2]||"";r=r.trim();const s=r[0];r=r.replace(/^(['"`])([\s\S]*)\1$/gm,"$2"),'"'===s&&(r=r.replace(/\\n/g,"\n"),r=r.replace(/\\r/g,"\r")),t[e]=r}return t},populate:function(e,t,n={}){const r=Boolean(n&&n.debug),s=Boolean(n&&n.override);if("object"!=typeof t)throw new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");for(const n of Object.keys(t))Object.prototype.hasOwnProperty.call(e,n)?(!0===s&&(e[n]=t[n]),r&&l(!0===s?`"${n}" is already defined and WAS overwritten`:`"${n}" is already defined and was NOT overwritten`)):e[n]=t[n]}};e.exports.configDotenv=f.configDotenv,e.exports._configVault=f._configVault,e.exports._parseVault=f._parseVault,e.exports.config=f.config,e.exports.decrypt=f.decrypt,e.exports.parse=f.parse,e.exports.populate=f.populate,e.exports=f},113:e=>{"use strict";e.exports=require("crypto")},147:e=>{"use strict";e.exports=require("fs")},37:e=>{"use strict";e.exports=require("os")},17:e=>{"use strict";e.exports=require("path")},968:e=>{"use strict";e.exports=JSON.parse('{"name":"dotenv","version":"16.3.1","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"types":"./lib/main.d.ts","require":"./lib/main.js","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","lint-readme":"standard-markdown","pretest":"npm run lint && npm run dts-check","test":"tap tests/*.js --100 -Rspec","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"funding":"https://github.com/motdotla/dotenv?sponsor=1","keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3","decache":"^4.6.1","sinon":"^14.0.1","standard":"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0","tap":"^16.3.0","tar":"^6.1.11","typescript":"^4.8.4"},"engines":{"node":">=12"},"browser":{"fs":false}}')}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var o=t[r]={exports:{}};return e[r](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";const e=require("http");n(371);var t=n(37),r=n.n(t);const s=require("cluster");var o=n.n(s),i=n(113),a=n.n(i);const c=new Uint8Array(256);let l=c.length;function u(){return l>c.length-16&&(a().randomFillSync(c),l=0),c.slice(l,l+=16)}const d=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,p=function(e){return"string"==typeof e&&d.test(e)},f=[];for(let e=0;e<256;++e)f.push((e+256).toString(16).substr(1));const v=function(e,t,n){const r=(e=e||{}).random||(e.rng||u)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t){n=n||0;for(let e=0;e<16;++e)t[n+e]=r[e];return t}return function(e,t=0){const n=(f[e[t+0]]+f[e[t+1]]+f[e[t+2]]+f[e[t+3]]+"-"+f[e[t+4]]+f[e[t+5]]+"-"+f[e[t+6]]+f[e[t+7]]+"-"+f[e[t+8]]+f[e[t+9]]+"-"+f[e[t+10]]+f[e[t+11]]+f[e[t+12]]+f[e[t+13]]+f[e[t+14]]+f[e[t+15]]).toLowerCase();if(!p(n))throw TypeError("Stringified UUID is invalid");return n}(r)};var g=function(e,t,n,r){return new(n||(n=Promise))((function(s,o){function i(e){try{c(r.next(e))}catch(e){o(e)}}function a(e){try{c(r.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,a)}c((r=r.apply(e,t||[])).next())}))},h=function(e,t,n,r){return new(n||(n=Promise))((function(s,o){function i(e){try{c(r.next(e))}catch(e){o(e)}}function a(e){try{c(r.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,a)}c((r=r.apply(e,t||[])).next())}))};const y="Internal Server Error",E="Request Body Does Not Contain Required Fields",N="UserId Is Invalid (not uuid)",m="UserId Is Not Found",O=(e,t,n)=>{e.writeHead(t,{"Content-Type":"application/json"}),e.end(n)},_=new class{constructor(){this.users=[]}getUsers(){return g(this,void 0,void 0,(function*(){return this.users}))}findUser(e){return g(this,void 0,void 0,(function*(){return this.users.find((t=>t.id===e))||{username:"",age:0,hobbies:[]}}))}createUser(e){return g(this,void 0,void 0,(function*(){const t=JSON.parse(JSON.stringify(e));return t.id=this.createId(),this.users.push(t),t}))}updateUser(e){return g(this,void 0,void 0,(function*(){const t=JSON.parse(JSON.stringify(e));return this.users.forEach(((e,n)=>{e.id===t.id&&(this.users[n]=t)})),t}))}deleteUser(e){return g(this,void 0,void 0,(function*(){let t=null;this.users.forEach(((n,r)=>{n.id===e.id&&(t=r)})),t&&this.users.splice(t,1)}))}createId(){let e="",t=!1;for(;!t;){e=v();let n=!1;this.users.forEach((t=>{t.id===e&&(n=!0)})),n||(t=!0)}return e}},D=Number(process.env.PORT),b=(e,t)=>{const{method:n,url:r}=e;if(n&&r)if("GET"===n&&"/api/users"===r)((e,t)=>{h(void 0,void 0,void 0,(function*(){let n,r="";try{const e=yield t.getUsers();r=JSON.stringify(e),n=200}catch(e){r=JSON.stringify({message:y}),n=500}O(e,n,r)}))})(t,_);else if("GET"===n&&r.match(/\/api\/users\/([0-9a-zA-Z-]+)/)){const e=r.split("/")[3];((e,t,n)=>{h(void 0,void 0,void 0,(function*(){let r="",s=0;try{if(p(n)){const e=yield t.findUser(n);e.id?(r=JSON.stringify(e),s=200):(r=JSON.stringify({message:m}),s=404)}else r=JSON.stringify({message:N}),s=400}catch(e){r=JSON.stringify({message:y}),s=500}O(e,s,r)}))})(t,_,e)}else if("PUT"===n&&r.match(/\/api\/users\/([0-9a-zA-Z-]+)/)){const n=r.split("/")[3];((e,t,n,r)=>{h(void 0,void 0,void 0,(function*(){let s="",o=0;try{let i="";e.on("data",(e=>i+=e.toString())),e.on("end",(()=>h(void 0,void 0,void 0,(function*(){if(i){const{username:e,age:a,hobbies:c}=JSON.parse(i);if(e&&a&&c&&"string"==typeof e&&"number"==typeof a&&Array.isArray(c)){const t={username:e,age:a,hobbies:c,id:r};if(p(r))if((yield n.findUser(r)).id){const e=yield n.updateUser(t);s=JSON.stringify(e),o=200}else s=JSON.stringify({message:m}),o=404;else s=JSON.stringify({message:N}),o=400}else s=JSON.stringify({message:E}),o=400;O(t,o,s)}}))))}catch(e){s=JSON.stringify({message:y}),o=500,O(t,o,s)}}))})(e,t,_,n)}else if("DELETE"===n&&r.match(/\/api\/users\/([0-9a-zA-Z-]+)/)){const e=r.split("/")[3];((e,t,n)=>{h(void 0,void 0,void 0,(function*(){let r="",s=0;try{if(p(n)){const e=yield t.findUser(n);e.id?(yield t.deleteUser(e),r=JSON.stringify(""),s=204):(r=JSON.stringify({message:m}),s=404)}else r=JSON.stringify({message:N}),s=400}catch(e){r=JSON.stringify({message:y}),s=500}O(e,s,r)}))})(t,_,e)}else if("POST"===n&&"/api/users"===r)((e,t,n)=>{h(void 0,void 0,void 0,(function*(){let r,s="";try{let o="";e.on("data",(e=>o+=e.toString())),e.on("end",(()=>h(void 0,void 0,void 0,(function*(){if(o){const{username:e,age:i,hobbies:a}=JSON.parse(o);if(e&&i&&a&&"string"==typeof e&&"number"==typeof i&&Array.isArray(a)){const t={username:e,age:i,hobbies:a},o=yield n.createUser(t);s=JSON.stringify(o),r=201}else s=JSON.stringify({message:E}),r=400;O(t,r,s)}}))))}catch(e){s=JSON.stringify({message:y}),r=500,O(t,r,s)}}))})(e,t,_);else{const e=JSON.stringify({message:"Route Not Found"}),n=404;t.writeHead(n,{"Content-Type":"application/json"}),t.end(e)}},T=()=>{(0,e.createServer)(b).listen(D,"localhost",(()=>{console.log(`Сервер запущен на порту ${D}`)}))};3===process.argv.length&&"multi"===process.argv[2]?o().isPrimary?r().cpus().forEach((()=>{const e=o().fork();e.send(`Worker id: ${e.id} launched`)})):(T(),process.on("message",(e=>console.log(`Message from master: "${e}"`)))):T()})()})();